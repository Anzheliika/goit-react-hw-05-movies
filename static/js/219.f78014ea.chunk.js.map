{"version":3,"file":"static/js/219.f78014ea.chunk.js","mappings":"0PAEaA,EAAWC,EAAAA,EAAAA,GAAH,wGAORC,EAAWD,EAAAA,EAAAA,GAAH,yC,SC8BrB,EAjCa,WACX,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,EAC5B,GAAE,CAACC,KAGF,SAACN,EAAD,UACGI,EAAOO,MACNP,EAAOO,KAAKC,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAAlC,OACd,UAACd,EAAD,WACGa,GACC,gBACEE,IAAG,yCAAoCF,GACvCG,IAAKJ,EACLK,MAAM,SAGR,gBAAKF,IAlBf,+DAkBkCC,IAAKJ,EAAMK,MAAM,MAAMC,OAAO,SAExD,SAAC,KAAD,UAAcN,KACd,UAAC,KAAD,yBAAyBD,OAXZG,EADD,KAiBvB,C,+LCnCKK,EAAW,gCACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFtC,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,8BACYQ,EADZ,oBAC6BP,EAD7B,+CADlB,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,oBACaT,EADb,oBADlB,cACCG,EADD,yBAKEA,EAASC,MALX,kEAQA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BsB,GAA5B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,EADrB,oBADlB,cACCG,EADD,yBAKEA,EAASC,MALX,kEAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDU,EADC,4BACqBT,EADrB,2BADlB,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n`;\n\nexport const CastItem = styled.li`\n  width: 250px;\n`;","import { Description } from 'pages/MovieDetails/MovieDetails.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/api';\nimport { CastItem, CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  const defaultPhoto =\n    'https://s3.amazonaws.com/37assets/svn/765-default-avatar.png';\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setActors);\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {actors.cast &&\n        actors.cast.map(({ character, name, profile_path, cast_id }) => (\n          <CastItem key={cast_id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n                width=\"250\"\n              />\n            ) : (\n              <img src={defaultPhoto} alt={name} width=\"250\" height='360'/>\n            )}\n            <Description>{name}</Description>\n            <Description>Character: {character}</Description>\n          </CastItem>\n        ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1af6aa3b66a06628ab2e4f0b1f9b28f5';\n\nexport async function getTrendMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n}\n\nexport async function searchMovies(query) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function getMovieCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n"],"names":["CastList","styled","CastItem","useState","actors","setActors","movieId","useParams","useEffect","getMovieCast","then","cast","map","character","name","profile_path","cast_id","src","alt","width","height","BASE_URL","API_KEY","getTrendMovies","axios","response","data","results","searchMovies","query","getMovieDetails","id","getMovieReviews"],"sourceRoot":""}